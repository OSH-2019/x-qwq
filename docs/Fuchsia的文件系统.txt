Fuchsia的文件系统

Fuchsia不同于Unix、Linux系统，IO操作（open(), write(), read()等）不是通过系统调用完成。与其他各种模块和驱动一样，IO和文件系统相关操作完全通过IPC完成，且Zircon微内核不参与，仅负责进程间的信息通讯。

具体来说，Fuchsia中的libfdio提供了与POSIX兼容的IO接口，但与Unix不同，这些函数并非是系统调用，而是包装了对文件系统服务程序的RPC调用。这些RPC调用使用Fuchsia中FIDL语言定义而成，可以实现跨语言的调用。文件系统服务完全运行在用户空间，接受RPC请求并作出回应。文件系统服务有可能访问块设备，这也是通过RPC进行的。在Fuchsia中要实现文件系统服务，只需要按照fuchsia.io接口建立一个接受RPC请求的服务器并实现此接口的调用（如Open, Read, Link等），另外还要处理别的文件系统服务在子目录下挂载的请求。文件系统服务需要处理异步IO、同步等问题。Fuchsia系统内部实现了一个虚拟文件系统libfs，但并未提供对外的SDK接口，需要自己实现。